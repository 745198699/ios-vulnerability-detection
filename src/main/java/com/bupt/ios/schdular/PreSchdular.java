package com.bupt.ios.schdular;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.bupt.ios.commonData.ProjectParamters;


public class PreSchdular {
	private static Logger logger = LogManager.getLogger(PreSchdular.class);
	private String fileSeparator = System.getProperty("file.separator");
	
	public boolean schdular(){
		//判断ipa路径是否合法
		String ipaPaht = ProjectParamters.getIpaPath();
		if(!ipaPaht.endsWith("ipa")){
			logger.warn("input file is not a ipa!");
			return false;
		}
		logger.info("input is a ipa!");
		
		//获取idaPath
		String idaPath = "";
		InputStream configIn = getClass().getResourceAsStream("/path_config.properties");
		Properties configPro = new Properties();
		try {
			configPro.load(configIn);
			idaPath=configPro.getProperty("IDAPath");
			ProjectParamters.setIdaPath(idaPath);
			logger.info("idaPath:"+idaPath);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.warn(e.getMessage());
			return false;
		}
		
		//create detemp directory
		clearDetemp();
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss");
		String detempFileName = dateFormat.format(new Date()).toString();
		String detempFilePath = System.getProperty("user.dir")+fileSeparator+"detemp"+fileSeparator+detempFileName;
		File detempDir = new File(detempFilePath);
		detempDir.mkdir();
		ProjectParamters.setDetempPath(detempFilePath);
		
		
		return true;
	}
	
	private void clearDetemp(){
		String detmpPath = System.getProperty("user.dir")+fileSeparator+"detemp";
		File detmpFile = new File(detmpPath);
		File[]dirs = detmpFile.listFiles();
		for(File dir : dirs){
			clearDir(dir);
		}
	}
	
	private void clearDir(File root){
		if(root.isDirectory()){
			File[]files = root.listFiles();
			for(File file:files){
				clearDir(file);
			}
		}
		root.delete();
	}

//	private void 
}
