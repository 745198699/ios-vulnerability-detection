package com.bupt.ios.decompile;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;

import org.apache.logging.log4j.*;

import com.bupt.ios.commonData.ProjectParamters;

public class IdaAnalyse {
	private static String fileSeparator = System.getProperty("file.separator");
	private static Logger logger = LogManager.getLogger(IdaAnalyse.class);
	
	public void genIDB(){
		//创建detemp子文件
		File idaDir = new File(ProjectParamters.getDetempPath()+fileSeparator+"ida");
		if(!idaDir.exists())
			idaDir.mkdir();
		
		//运行ida，生成idb文件
		String idaCmdString = ProjectParamters.getIdaPath()+" -A -B "+ProjectParamters.getExeFilePath();
		Process idaProcess;
		try{
			logger.info("ready exe cmd:"+idaCmdString);
			idaProcess = Runtime.getRuntime().exec(idaCmdString);
			BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(idaProcess.getInputStream()), 1024);
			String line;	
			//错误内容输出
	        while((line = bufferedReader.readLine()) != null)
	        	logger.error("<error>"+line);
	        bufferedReader.close();
		}catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		File idbFile = new File(ProjectParamters.getExeFilePath()+".i64");
		if(!idbFile.exists()){
			logger.warn("generate idb failed");
			return ;
		}else{
			ProjectParamters.setIdbPath(ProjectParamters.getExeFilePath()+".i64");
			logger.info("generate idb success");
		}
		
		//cp idb文件到detemp-ida下，等待解析
		//判断操作系统
		
			
		
	}
	
//	public static void main(String[] args) {
//		ProjectParamters.setDetempPath("/Users/konghaohao/Documents/git_workspace/ios-vulnerability-detection/detemp/2016-07-13-16-27-34");
//		ProjectParamters.setIdaPath("/Applications/IDA_Pro_6.5/idaq.app/Contents/MacOS/idaq64");
//		ProjectParamters.setExeFilePath("/Users/konghaohao/Documents/git_workspace/ios-vulnerability-detection/detemp/2016-07-13-16-27-34/unzip/Payload/DamnVulnerableIOSApp.app/DamnVulnerableIOSApp");
//		new IdaAnalyse().genIDB();
//	}

}
